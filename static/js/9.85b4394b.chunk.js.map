{"version":3,"sources":["redux/selectros/profile_selectors.js","components/Profile/ProfileStatus/ProfileInfo.jsx","components/Profile/ProfileStatus/StatusForm.jsx","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileContainer.jsx"],"names":["getUserProfileSelector","state","userProfile","getStatusSelector","status","getUserIdSelector","auth","userId","ProfileInfo","props","fullName","aboutMe","StatusForm","reduxForm","form","console","info","initialized","handleSubmit","initialValues","onSubmit","Field","onMouseOut","onBlur","autoFocus","type","name","value","placeholder","component","className","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","deactiveeditMode","editStatus","e","putStatus","Alert","variant","onDoubleClick","ProfileConteiner","initional","uid","this","match","params","initFn","id","Promise","all","getProfileThunk","getStatusThunk","then","values","setState","undefined","history","push","to","putStatusThunk","isFetching","React","Component","compose","connect","setUserProfile","withRouter"],"mappings":"kMAAMA,EAAyB,SAAAC,GAAK,OAAIA,EAAMC,aACxCC,EAAoB,SAAAF,GAAK,OAAIA,EAAMG,QACnCC,EAAoB,SAAAJ,GAAK,OAAIA,EAAMK,KAAKC,QCS/BC,EATK,SAACC,GACnB,OACE,6BACE,yCAAeA,EAAMP,YAAYQ,UACjC,wCAAcD,EAAMP,YAAYS,W,2CCmBrBC,EAHEC,YAAU,CACvBC,KAAM,YADOD,EAnBN,SAACJ,GACVM,QAAQC,KAAK,eAAgBP,EAAMQ,aADf,IAEZC,EAAgCT,EAAhCS,aAAcC,EAAkBV,EAAlBU,cACtB,OACE,0BAAMC,SAAUF,GACd,kBAACG,EAAA,EAAD,CACEC,WAAYb,EAAMa,WAClBC,OAAQd,EAAMc,OACdC,UAAWf,EAAMe,UACjBC,KAAK,OACLC,KAAK,SACLC,MAAOR,EACPS,YAAY,YACZC,UAAW,QACXC,UAAW,qB,SCuBNC,EApCgB,SAACtB,GAAW,IAAD,EACVuB,oBAAS,GADC,mBACnCC,EADmC,KACzBC,EADyB,OAEdF,mBAASvB,EAAML,QAFD,mBAEnCA,EAFmC,KAE3B+B,EAF2B,KAGxCC,qBAAU,WACRD,EAAU1B,EAAML,UACf,CAACK,EAAML,SAEV,IAEMiC,EAAmB,kBAAM5B,EAAM6B,WAAYJ,GAAY,GAAS,MAMtE,OACE,6BACGD,GACC,kBAAC,EAAD,CACEb,SARa,SAAAmB,GACnB9B,EAAM+B,UAAUD,EAAEnC,QAClBiC,KAOMd,OAAQc,EACRb,WAAW,EACXF,WAAYe,EACZlB,cAAe,CAACf,aAInB6B,GACC,kBAACQ,EAAA,EAAD,CAAOC,QAAS,UAAWC,cArBV,kBAAMlC,EAAM6B,WAAYJ,GAAY,GAAQ,OAqB7D,WACwB,OAAX9B,EAAiBA,EAAS,qBCtBzCwC,E,kDACJ,WAAYnC,GAAO,IAAD,8BAChB,cAAMA,IACDR,MAAQ,CACX4C,WAAW,EACXP,YAAY,GAJE,E,gEAOE,IAAD,OACbQ,EAAMC,KAAKtC,MAAMuC,MAAMC,OAAOH,IAC9BvC,EAASwC,KAAKtC,MAAMF,OAClB2C,EAAS,SAAAC,GACbC,QAAQC,IAAI,CACV,EAAK5C,MAAM6C,gBAAgBH,GAC3B,EAAK1C,MAAM8C,eAAeJ,KAAMK,MAAK,SAAAC,GACnC,EAAKC,SAAS,CAACb,WAAW,QAGhC,QAAWc,IAARb,EACDI,EAAOJ,GACPC,KAAKW,SAAS,CAACpB,YAAY,SACvB,QAAWqB,IAARb,QAAgCa,IAAXpD,EAC5B2C,EAAO3C,GACPwC,KAAKW,SAAS,CAACpB,YAAY,SACvB,QAAWqB,IAARb,QAAiCa,IAAXpD,EAC7B,OAAOwC,KAAKtC,MAAMmD,QAAQC,KAAK,a,+BAKjC,OAAId,KAAK9C,MAAM4C,eAIoBc,IAAhCZ,KAAKtC,MAAMuC,MAAMC,OAAOH,UAA2Ca,IAAtBZ,KAAKtC,MAAMF,OAErD,kBAAC,IAAD,CAAUuD,GAAI,WAEd,6BACE,kBAAC,EAAD,CACE1D,OAAQ2C,KAAKtC,MAAML,OACnBoC,UAAWO,KAAKtC,MAAMsD,eACtB5B,UAAWY,KAAKtC,MAAM0B,UACtBG,WAAYS,KAAK9C,MAAMqC,aACzB,kBAAC,EAAD,CAAapC,YAAa6C,KAAKtC,MAAMP,eAbpC,kBAAC,IAAD,CAAW8D,YAAY,Q,GA/BLC,IAAMC,WAyDtBC,4BACbC,aARoB,SAACnE,GACrB,MAAO,CACLC,YAAaF,EAAuBC,GACpCG,OAAQD,EAAkBF,GAC1BM,OAAQF,EAAkBJ,MAIH,CACvBoE,mBACAf,oBACAC,mBACAQ,mBACA5B,gBAEFmC,IARaH,CASbvB","file":"static/js/9.85b4394b.chunk.js","sourcesContent":["const getUserProfileSelector = state => state.userProfile;\nconst getStatusSelector = state => state.status;\nconst getUserIdSelector = state => state.auth.userId;\n\nexport { getUserProfileSelector, getStatusSelector, getUserIdSelector };","import React from 'react';\n\nconst ProfileInfo = (props) => {\n  return(\n    <div>\n      <h2>fullName: {props.userProfile.fullName}</h2>\n      <h3>aboutMe: {props.userProfile.aboutMe}</h3>\n    </div>\n  )\n  \n}\nexport default ProfileInfo;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nconst From = (props) => {\n    console.info(\"RENDER: From\", props.initialized)\n    const { handleSubmit, initialValues } = props;\n    return (\n      <form onSubmit={handleSubmit}>\n        <Field \n          onMouseOut={props.onMouseOut}\n          onBlur={props.onBlur}\n          autoFocus={props.autoFocus}\n          type=\"text\" \n          name=\"status\" \n          value={initialValues}\n          placeholder=\"My status\" \n          component={\"input\"}\n          className={\"form-control\"}/>\n      </form>\n    )\n  }\n  //! enableReinitialize нужно почитать про свойство\n  let StatusForm = reduxForm({ \n      form: 'myStatus'\n  })(From)\n  export default StatusForm;","import React, { useState, useEffect } from 'react';\nimport StatusForm from './StatusForm';\nimport { Alert } from 'react-bootstrap';\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n  useEffect(()=>{\n    setStatus(props.status);\n  }, [props.status])\n\n  const activeeditMode = () => props.editStatus? setEditMode(true) : null;\n\n  const deactiveeditMode = () => props.editStatus? setEditMode(false) : null;\n  \n  const handleSubmit = e => {\n    props.putStatus(e.status);\n    deactiveeditMode();\n  }\n  return(\n    <div>\n      {editMode &&\n        <StatusForm \n          onSubmit={handleSubmit}\n          onBlur={deactiveeditMode}\n          autoFocus={true}\n          onMouseOut={deactiveeditMode}\n          initialValues={{status}}\n        />\n      }\n      {\n      !editMode &&\n        <Alert variant={'warning'} onDoubleClick={activeeditMode}>\n            status: {status !== null? status : 'status it empty'}  \n        </Alert>\n      } \n    </div>\n  )\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from \"react-router\";\nimport { setUserProfile, getProfileThunk } from '../../redux/reducers/profile_reducer';\nimport { setStatus, getStatusThunk, putStatusThunk } from '../../redux/reducers/status_reducer';\nimport { getUserProfileSelector, getStatusSelector, getUserIdSelector } from '../../redux/selectros/profile_selectors';\nimport ProfileInfo from './ProfileStatus/ProfileInfo';\nimport { compose } from 'redux';\nimport Prelouder from '../common/prelouder/prelouder';\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\n\nclass ProfileConteiner extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = { \n      initional: false,\n      editStatus: false\n    }\n  }\n  componentDidMount(){\n    let uid = this.props.match.params.uid;\n    let userId = this.props.userId;\n    const initFn = id => {\n      Promise.all([\n        this.props.getProfileThunk(id), \n        this.props.getStatusThunk(id)]).then(values => { \n          this.setState({initional: true});\n      }); \n    }\n    if(uid !== undefined){\n      initFn(uid); \n      this.setState({editStatus: false});\n    }else if(uid === undefined && userId !== undefined){\n      initFn(userId); \n      this.setState({editStatus: true});\n    }else if(uid === undefined &&  userId === undefined ){\n      return this.props.history.push('./login');\n    }\n  }\n\n  render(){\n    if(!this.state.initional){\n      return <Prelouder isFetching={true}/>\n    } \n    return(\n      (this.props.match.params.uid === undefined && this.props.userId === undefined)\n        ? \n          <Redirect to={\"/login\"}/> \n        : \n          <div>\n            <ProfileStatusWithHooks \n              status={this.props.status} \n              putStatus={this.props.putStatusThunk}\n              setStatus={this.props.setStatus}\n              editStatus={this.state.editStatus}/>\n            <ProfileInfo userProfile={this.props.userProfile}/>\n          </div>\n      \n    )\n  }\n}\nlet mapStateToProps = (state) => {\n  return {\n    userProfile: getUserProfileSelector(state),\n    status: getStatusSelector(state),\n    userId: getUserIdSelector(state)\n  }\n}\nexport default compose(\n  connect(mapStateToProps, { \n    setUserProfile, \n    getProfileThunk,\n    getStatusThunk, \n    putStatusThunk,\n    setStatus\n  }),\n  withRouter\n)(ProfileConteiner)\n"],"sourceRoot":""}